<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comm.mapif.MenuMapper">

	<resultMap id="MenuListResult" type="hashmap">
		<result property="menuNo"		column="menuNo" />
		<result property="menuNm"		column="menuNm" />
		<result property="progrmNm"		column="progrmNm" />
		<result property="menuLevel"	column="menuLevel" />
		<result property="parntsMenuNo"	column="parntsMenuNo" />
		<result property="outptTyNm"	column="outptTyNm" />
		<result property="outptAt"		column="outptAt" />
		<result property="useAt"		column="useAt" />
		<result property="siteSeNm"		column="siteSeNm" />
		<result property="rn"			column="rn" />
	</resultMap>

	<resultMap id="MenuInfoResult" type="hashmap">
		<result property="menuNo"		column="menuNo" />
		<result property="menuNm"		column="menuNm" />
		<result property="progrmId"		column="progrmId" />
		<result property="progrmNm"		column="progrmNm" />
		<result property="menuLevel"	column="menuLevel" />
		<result property="parntsMenuNo"	column="parntsMenuNo" />
		<result property="parntsMenuNm"	column="parntsMenuNm" />
		<result property="outptOrdr"	column="outptOrdr" />
		<result property="outptTy"		column="outptTy" />
		<result property="outptAt"		column="outptAt" />
		<result property="useAt"		column="useAt" />
		<result property="siteSe"		column="siteSe" />
		<result property="lastNodeAt"	column="lastNodeAt" />
		<result property="url"			column="url" />
	</resultMap>

	<!-- 사용자 메뉴 목록 조회 -->
	<select id="findUserMenu" resultType="menuVO">
		SELECT 	/* ProgramID=com.comm.mapif.MenuMapper.findUserMenu */
			 mn.menu_no			AS menuNo
			,mn.progrm_id		AS progrmId
			,mn.menu_nm			AS menuNm
			,mn.menu_level		AS menuLevel
			,mn.parnts_menu_no	AS parntsMenuNo
			,mn.outpt_ordr		AS outptOrdr
			,mn.outpt_ty		AS outptTy
			,mn.outpt_at		AS outptAt
			,mn.use_at			AS useAt
			,mn.last_node_at	AS lastNodeAt
			,mn.url				AS url
			,mn.site_se			AS siteSe
			,CASE WHEN mn.menu_level <![CDATA[<=]]> 1 then 'Y' ELSE 'N' END  AS topNodeAt
			,pg.job_se			AS jobSe
		FROM tb_menuinfo mn, tb_progrminfo pg, tb_authorinfo at
		WHERE mn.progrm_id = pg.progrm_id
		AND pg.progrm_id = at.progrm_id
		AND at.author_group_code IN
		<foreach item="item" collection="authorGrpCd" open="(" separator="," close=")">
			#{item}
		</foreach>
		AND at.menu_outpt_at = 'Y'		<!-- 메뉴출력여부 -->
		AND mn.use_at = 'Y'				<!-- 메뉴사용여부 -->
		ORDER BY mn.menu_level ASC, mn.parnts_menu_no ASC, TO_NUMBER(mn.outpt_ordr) ASC
	</select>

	<!-- 사용자 메뉴 목록 조회 -->
	<select id="findNoScreenMenu" resultType="map">
		SELECT /* ProgramID=com.comm.mapif.MenuMapper.findNoScreenMenu */
			mn.menu_no AS menuNo
		FROM tb_menuinfo mn
		WHERE mn.last_node_at = 'N'
	</select>

	<!-- 메뉴목록갯수 -->
	<select id="findMenuListCnt" resultType="int">
		SELECT	/* ProgramID=com.comm.mapif.MenuMapper.findMenuListCnt */
			COUNT(*)
		FROM tb_menuinfo
		<!-- 검색조건 -->
		<where>
			<if test="searchSiteSe != '' and searchSiteSe != null">site_se = #{searchSiteSe}</if>
			<if test="searchMenuNm != '' and searchMenuNm != null">AND menu_nm LIKE '%'||#{searchMenuNm}||'%'</if>
		</where>
	</select>

	<!-- 메뉴목록조회 -->
	<select id="findMenuList" resultMap="MenuListResult">
		SELECT	/* ProgramID=com.comm.mapif.MenuMapper.findMenuList */
			 mn.menu_no			AS menuNo
			,mn.menu_nm			AS menuNm
			,pg.progrm_nm		AS progrmNm
			,mn.menu_level		AS menuLevel
			,mn.parnts_menu_no	AS parntsMenuNo
			,(SELECT code_nm FROM tb_cmmncode WHERE code_group_no='3' AND code=mn.outpt_ty)	AS outptTyNm
			,CASE WHEN mn.outpt_at = 'Y' THEN '출력' ELSE '출력안함' END 						AS outptAt
			,CASE WHEN mn.use_at = 'Y' THEN '사용' ELSE '사용안함' END							AS useAt
			,(SELECT code_nm FROM tb_cmmncode WHERE code_group_no='1' AND code=mn.site_se)	AS siteSeNm
			,mn.rn
		FROM (
			SELECT tbl3.*, rownum AS rn
			FROM (
				SELECT DISTINCT mn1.*
				FROM tb_menuinfo mn1
				<where>
					<if test="searchSiteSe != '' and searchSiteSe != null">AND site_se = #{searchSiteSe}</if>
					<if test="searchMenuNm != '' and searchMenuNm != null">AND menu_nm LIKE '%'||#{searchMenuNm}||'%'</if>
				</where>
			) AS tbl3
			START WITH tbl3.MENU_LEVEL = (
											SELECT
												MIN(mn1.MENU_LEVEL)
											FROM tb_menuinfo mn1
											<where>
												<if test="searchSiteSe != '' and searchSiteSe != null">AND site_se = #{searchSiteSe}</if>
												<if test="searchMenuNm != '' and searchMenuNm != null">AND menu_nm LIKE '%'||#{searchMenuNm}||'%'</if>
											</where>
											)
			CONNECT BY PRIOR MENU_NO = PARNTS_MENU_NO
			ORDER SIBLINGS BY site_se DESC, outpt_ordr
		) mn, tb_progrminfo pg
		WHERE mn.progrm_id = pg.progrm_id
		AND rn BETWEEN (1 + #{limitFrom}) AND (#{limitFrom} + #{limitTo})
		ORDER BY rn
	</select>

	<!-- 하위메뉴갯수 -->
	<select id="findSubMenuCnt" resultType="int">
		SELECT	/* ProgramID=com.comm.mapif.MenuMapper.findSubMenuCnt */
			COUNT(*)
		FROM tb_menuinfo
		WHERE parnts_menu_no = #{menuNo}
	</select>

	<!-- 메뉴정보조회 -->
	<select id="findMenuInfo" resultMap="MenuInfoResult">
		SELECT	/* ProgramID=com.comm.mapif.MenuMapper.findMenuInfo */
			 mn.menu_no															AS menuNo
			,mn.menu_nm															AS menuNm
			,mn.progrm_id														AS progrmId
			,pg.progrm_nm														AS progrmNm
			,mn.menu_level														AS menuLevel
			,(SELECT menu_no FROM tb_menuinfo WHERE menu_no=mn.parnts_menu_no)	AS parntsMenuNo
			,(SELECT menu_nm FROM tb_menuinfo WHERE menu_no=mn.parnts_menu_no)	AS parntsMenuNm
			,mn.outpt_ordr														AS outptOrdr
			,mn.outpt_ty														AS outptTy
			,mn.outpt_at														AS outptAt
			,mn.use_at															AS useAt
			,mn.site_se															AS siteSe
			,mn.last_node_at													AS lastNodeAt
			,mn.url																AS url
		FROM tb_menuinfo mn, tb_progrminfo pg
		WHERE mn.menu_no = #{menuNo}
		AND	mn.progrm_id = pg.progrm_id
	</select>

	<!-- 출력순서 조회 -->
	<select id="findOutptOrdr" resultType="int">
		SELECT /* ProgramID=com.comm.mapif.MenuMapper.findOutptOrdr */
			NVL(MAX(mn.outpt_ordr), 0)
		FROM tb_menuinfo mn
		WHERE mn.parnts_menu_no = #{menuNo}
	</select>

	<!-- 메뉴등록 -->
	<insert id="insertMenu">
		INSERT	/* ProgramID=com.comm.mapif.MenuMapper.insertMenu */
		INTO tb_menuinfo (
			 menu_no
			,progrm_id
			,menu_nm
			,menu_level
			,parnts_menu_no
			,outpt_ordr
			,outpt_ty
			,outpt_at
			,use_at
			,last_node_at
			,site_se
			,url
			,register
			,rgsde
			,updusr
			,updde
		) VALUES (
			 (SELECT NVL(MAX(TO_NUMBER(menu.menu_no)),0)+1 FROM tb_menuinfo menu)
			,#{progrmId}
			,#{menuNm}
			,#{menuLevel}
			,#{parntsMenuNo}
			,#{outptOrdr}
			,#{outptTy}
			,#{outptAt}
			,#{useAt}
			,#{lastNodeAt}
			,#{siteSe}
			,#{url}
			,#{register}
			,SYSDATE
			,#{updusr}
			,SYSDATE
		)
	</insert>

	<!-- 메뉴수정 -->
	<update id="updateMenu">
		UPDATE	/* ProgramID=com.comm.mapif.MenuMapper.updateMenu */
			tb_menuinfo
		SET
			 progrm_id = #{progrmId}
			,menu_nm = #{menuNm}
			,menu_level = #{menuLevel}
			,parnts_menu_no = #{parntsMenuNo}
			,outpt_ordr = #{outptOrdr}
			,outpt_ty = #{outptTy}
			,outpt_at = #{outptAt}
			,use_at = #{useAt}
			,last_node_at = #{lastNodeAt}
			,site_se = #{siteSe}
			,url = #{url}
			,updusr = #{updusr}
			,updde = SYSDATE
		WHERE menu_no = #{menuNo}
	</update>

	<!-- lastNodeAt 수정 -->
	<update id="updateLastNodeAt">
		UPDATE /* ProgramID=com.comm.mapif.MenuMapper.updateLastNodeAt */
			tb_menuinfo
		SET
			 last_node_at = #{lastNodeAt}
			,updusr = #{updusr}
			,updde = SYSDATE
		WHERE menu_no = #{parntsMenuNo}
	</update>

	<!-- 메뉴삭제 -->
	<delete id="deleteMenu">
		DELETE	/* ProgramID=com.comm.mapif.MenuMapper.deleteMenu */
		FROM tb_menuinfo
		WHERE menu_no = #{menuNo}
	</delete>

</mapper>