<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biz.tech.mapif.ev.PGEV1120Mapper">

<select id="findDayoffInfo" resultType="hashmap">
	SELECT 		a.PK, a.EMP_NO, a.TOTAL_CNT, b.EMP_NM, a.USE_YEAR,
				(
				case
					when(SUM(c.DATE_CNT)!=null)
						then SUM(c.DATE_CNT) 
					else
						0
				end
				) AS USE_TOTAL,
				a.TOTAL_CNT - (
				case
					when(SUM(c.DATE_CNT)!=null)
						then SUM(c.DATE_CNT) 
					else
						0
				end
				) AS RESULT
	FROM 		tb_dayoff a
	LEFT OUTER JOIN tb_pay_emp b
		ON a.EMP_NO = b.EMP_NO
	LEFT OUTER JOIN tb_dayoff_log c
		ON a.PK = c.DAYOFF_ID
		AND c.CANCEL_STATE = FALSE
		AND c.STATE = '완료'
	WHERE
			USE_YEAR = #{ad_select_year} 
		AND a.EMP_NO = #{EMP_NO} 
</select>

<select id="findDayoffLog" resultType="hashmap">
	SELECT		  LOG_DATE
				, DAYOFF_TYPE
				, START_DATE
				, END_DATE
				, DATE_CNT
				, STATE
				, CONTENT
				, CANCEL_STATE
				, PK
				
	FROM		tb_dayoff_log
	<where>
			DAYOFF_ID=(SELECT PK FROM tb_dayoff WHERE USE_YEAR = #{ad_select_year} AND EMP_NO = #{emp_no})
			<if test="state != 'state_all'"> AND STATE = #{state} </if>
			<if test="cancel_state != '전체'"> AND CANCEL_STATE = #{cancel_state} </if>
	</where>
</select>

<select id="findDays" resultType="hashmap">
	WITH A AS (
	SELECT 
		DATEDIFF(#{end_date}, #{start_date}) AS CNT1, 
		(SELECT COUNT(H_DATE) FROM tb_holiday 
		<![CDATA[WHERE H_DATE >= #{start_date} AND H_DATE < #{end_date}) AS CNT2]]>
	) 

	SELECT		CNT1 - CNT2 + 1 AS RESULT
	FROM A;
</select>

<insert id="saveDayoff">
	INSERT
	INTO		tb_dayoff_log (
				  PK 
				, DAYOFF_ID					/* 휴가정보 ID */
				, DATE_CNT					/* 사용 일수 */
				, CONTENT					/* 휴가 사유 */
				, START_DATE				/* 시작일 */
				, END_DATE					/* 종료일 */
				, DAYOFF_TYPE				/* 연차 종류 */
				, STATE						/* 결제 상태 */
	)
	VALUES ( 
				<if test="#{pk} != null">
					#{PK},
				</if>
				<if test="#{pk} == null">
					NULL,
				</if>
				  #{dayoff_id}
				, #{date_cnt}
				, #{content}
				, #{start_date}
				, #{end_date}
				, #{dayoff_type}
				, #{state}
			)
	ON DUPLICATE KEY UPDATE
				  DATE_CNT = #{date_cnt}
				, CONTENT =	#{content}
				, START_DATE = #{start_date}
				, END_DATE = #{end_date}
				, DAYOFF_TYPE = #{dayoff_type}
				, STATE = #{state}
</insert>


</mapper>