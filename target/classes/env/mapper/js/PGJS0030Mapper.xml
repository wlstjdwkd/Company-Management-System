<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biz.tech.mapif.js.PGJS0030Mapper">
	
	<!-- 기준년도 목록 조회 -->
	<select id="selectStdyyList" resultType="egovMap">
	SELECT		/* ProgramID=biz.tech.mapif.js.PGJS0030Mapper.selectStdyyList */
	DISTINCT	STDYY
	FROM		TB_ENTPRS_COLCT
	<if test="stdyy != null and stdyy != '' ">
	WHERE		STDYY <![CDATA[<=]]> #{stdyy}
	</if>
	ORDER BY	STDYY DESC
	</select>
	
	
	<!-- 최종 데이터 수집일자 조회 -->
	<select id="selectLastDataCollectDate" resultType="String">
	SELECT		/* ProgramID=biz.tech.mapif.js.PGJS0030Mapper.selectLastDataCollectDate */
					IFNULL(DATE_FORMAT(MAX(COLCT_DE), '%Y-%m-%d'), '')
	FROM		TB_ENTPRS_COLCT
	WHERE		STDYY = #{stdyy}
	</select>
	
	<!-- 기업수 조회 -->
	<select id="selectJdgmntEntprsCount" resultType="int">
	SELECT		/* ProgramID=biz.tech.mapif.js.PGJS0030Mapper.selectJdgmntEntprsCount */
					COUNT(*)
	FROM		TB_ENTPRS_INFO
	WHERE		STDYY = #{stdyy}
	</select>
	
	<!-- 기업군 시스템 판정 정보 조회 -->
	<select id="selectSystemJdgmntManage" resultType="egovMap">
	SELECT		/* ProgramID=biz.tech.mapif.js.PGJS0030Mapper.selectSystemJdgmntManage */
					  jdgmnt.GNRL_HPE_CO
					, IF(DATEDIFF(jdgmnt.HPE_JDGMNT_DE, colct.colldt) >= 0, 'N', 'Y')		WARN_HPE
					, IF(jdgmnt.HPE_JDGMNT_DE IS NULL, '-', DATE_FORMAT(jdgmnt.HPE_JDGMNT_DE, '%Y-%m-%d'))		HPE_JDGMNT_DE
					, jdgmnt.RCPY_CO
					, IF(DATEDIFF(jdgmnt.RCPY_JDGMNT_DE, colct.colldt) >= 0, 'N', 'Y')		WARN_RCPY
					, IF(jdgmnt.RCPY_JDGMNT_DE IS NULL, '-', DATE_FORMAT(jdgmnt.RCPY_JDGMNT_DE, '%Y-%m-%d'))		RCPY_JDGMNT_DE
					, jdgmnt.GZLC_CO
					, IF(DATEDIFF(jdgmnt.GZLC_JDGMNT_DE, colct.colldt) >= 0, 'N', 'Y')		WARN_GZLC
					, IF(jdgmnt.GZLC_JDGMNT_DE IS NULL, '-', DATE_FORMAT(jdgmnt.GZLC_JDGMNT_DE, '%Y-%m-%d'))		GZLC_JDGMNT_DE
					, jdgmnt.CNDCY_ENTRPRS_CO
					, IF(DATEDIFF(jdgmnt.CNDCY_ENTRPRS_JDGMNT_DE, colct.colldt) >=0, 'N', 'Y')		WARN_CNDCY
					, IF(jdgmnt.CNDCY_ENTRPRS_JDGMNT_DE IS NULL, '-', DATE_FORMAT(jdgmnt.CNDCY_ENTRPRS_JDGMNT_DE, '%Y-%m-%d'))		CNDCY_ENTRPRS_JDGMNT_DE
					, jdgmnt.LTRS_CO
					, IF(DATEDIFF(jdgmnt.LTRS_JDGMNT_DE, colct.colldt) >= 0, 'N', 'Y')		WARN_LTRS
					, IF(jdgmnt.LTRS_JDGMNT_DE IS NULL, '-', DATE_FORMAT(jdgmnt.LTRS_JDGMNT_DE, '%Y-%m-%d'))		LTRS_JDGMNT_DE
	FROM		TB_JDGMNT_MANAGE	jdgmnt,
					(
						SELECT		IFNULL(MAX(STR_TO_DATE(colct.COLCT_DE, '%Y%m%d')), '00000000')	colldt
						FROM		TB_ENTPRS_COLCT	colct
						WHERE		colct.STDYY = #{stdyy}
					)	colct
	WHERE		jdgmnt.STDYY = #{stdyy}
		AND		jdgmnt.JDGMNT_MBY = 'S'
	</select>
	
	<!-- 기업군 확정 판정 정보 조회 -->
	<select id="selectDcsnJdgmntManage" resultType="egovMap">
	SELECT		/* ProgramID=biz.tech.mapif.js.PGJS0030Mapper.selectDcsnJdgmntManage */
					  GNRL_HPE_CO
					, IF(HPE_JDGMNT_DE IS NULL, '-', DATE_FORMAT(HPE_JDGMNT_DE, '%Y-%m-%d %H:%i:%s'))		HPE_JDGMNT_DE
					, RCPY_CO
					, IF(RCPY_JDGMNT_DE IS NULL, '-', DATE_FORMAT(RCPY_JDGMNT_DE, '%Y-%m-%d %H:%i:%s'))		RCPY_JDGMNT_DE
					, GZLC_CO
					, IF(GZLC_JDGMNT_DE IS NULL, '-', DATE_FORMAT(GZLC_JDGMNT_DE, '%Y-%m-%d %H:%i:%s'))		 GZLC_JDGMNT_DE
					, CNDCY_ENTRPRS_CO
					, IF(CNDCY_ENTRPRS_JDGMNT_DE IS NULL, '-', DATE_FORMAT(CNDCY_ENTRPRS_JDGMNT_DE, '%Y-%m-%d %H:%i:%s'))		CNDCY_ENTRPRS_JDGMNT_DE
					, LTRS_CO
					, IF(LTRS_JDGMNT_DE IS NULL, '-', DATE_FORMAT(LTRS_JDGMNT_DE, '%Y-%m-%d %H:%i:%s'))		LTRS_JDGMNT_DE
	FROM		TB_JDGMNT_MANAGE
	WHERE		STDYY = #{stdyy}
		AND		JDGMNT_MBY = 'M'
	</select>
	
	<!-- 기업 판정상세 목록 개수 조회 -->
	<select id="selectEntprsInfoListCountByHpe" resultType="int">
	SELECT		/* ProgramID=biz.tech.mapif.js.PGJS0030Mapper.selectEntprsInfoListByHpe */
						COUNT(*)
	FROM			TB_ENTPRS_INFO	info
	WHERE		info.STDYY = #{stdyy}
		<if test="searchKeyword != null and searchKeyword != '' ">
			<if test="searchCondition == 'entrprsNm' ">
		AND		info.ENTRPRS_NM LIKE CONCAT('%', #{searchKeyword},'%')
			</if>
			<if test="searchCondition == 'jurirno' ">
		AND		info.JURIRNO	 LIKE CONCAT('%', #{searchKeyword},'%')
			</if>
			<if test="searchCondition == 'bizrno' ">
		AND		info.BIZRNO	 LIKE CONCAT('%', #{searchKeyword},'%')
			</if>
		</if>
		<if test='searchGubun == "A" '>
		AND		( info.SYS_HPE_AT = 'Y' OR info.DCSN_HPE_AT = 'Y' )
		</if>
		<if test='searchGubun == "S" '>
		AND		info.SYS_HPE_AT = 'Y'
		</if>
		<if test='searchGubun == "M" '>
		AND		info.DCSN_HPE_AT = 'Y'
		</if>
	</select>
	
	<!-- 기업 판정상세 목록 조회 -->
	<select id="selectEntprsInfoListByHpe" resultType="egovMap">
	SELECT		/* ProgramID=biz.tech.mapif.js.PGJS0030Mapper.selectEntprsInfoListByHpe */
					  info.STDYY
					, info.HPE_CD
					, info.JURIRNO
					, info.BIZRNO
					, info.ENTRPRS_NM
					, IF(info.SYS_HPE_AT IS NULL, '-', IF(info.SYS_HPE_AT = 'Y', '적합', '부적합'))	SYS_HPE_AT_NM
					, IF(info.DCSN_HPE_AT IS NULL, '-', IF(info.DCSN_HPE_AT = 'Y', '적합', '부적합'))	DCSN_HPE_AT_NM
					, IF(resn.SCALE_STDR = 'Y', '업종별규모기준', 
						IF(resn.UPLMT_1000 = 'Y', '상한기준(천명)', 
							IF(resn.UPLMT_ASSETS = 'Y', '상한기준(자산)', 
								IF(resn.UPLMT_CAPL = 'Y', '상한기준(자본)', 
									IF(resn.UPLMT_SELNG_3Y = 'Y', '상한기준(3년평균)',
										IF(resn.INDPNDNCY_DIRECT_30 = 'Y', '독립성기준(직접 30%)',
											IF(resn.INDPNDNCY_INDRT_30 = 'Y', '독립성기준(간접 30%)',
												IF(resn.INDPNDNCY_RCPY = 'Y', '독립성기준(관계기업)',
													IF(resn.MTLTY_INVSTMNT_LMTT = 'Y', '상호출자',
														IF(resn.FNCBIZ_ISCS = 'Y', '금융업 및 보험업',
															IF(resn.SMLPZ = 'Y', '중소기업',
																IF(resn.POSTPNE_ENTRPRS1 = 'Y', '유예기업1',
																	IF(resn.POSTPNE_ENTRPRS2 = 'Y', '유예기업2',
																		IF(resn.POSTPNE_ENTRPRS3 = 'Y', '유예기업3',
																			IF(resn.EXCL_CPR = 'Y', '제외법인',
																				IF(resn.FRNTN_SM_LTRS = 'Y', '외국계30%',
																					IF(resn.ELAPSE_MANAGT = 'Y', '제외기타', '-')))))))))))))))))	SYS_RESN_NM
					, IF(m_resn.SCALE_STDR = 'Y', '업종별규모기준', 
						IF(m_resn.UPLMT_1000 = 'Y', '상한기준(천명)', 
							IF(m_resn.UPLMT_ASSETS = 'Y', '상한기준(자산)', 
								IF(m_resn.UPLMT_CAPL = 'Y', '상한기준(자본)', 
									IF(m_resn.UPLMT_SELNG_3Y = 'Y', '상한기준(3년평균)',
										IF(m_resn.INDPNDNCY_DIRECT_30 = 'Y', '독립성기준(직접 30%)',
											IF(m_resn.INDPNDNCY_INDRT_30 = 'Y', '독립성기준(간접 30%)',
												IF(m_resn.INDPNDNCY_RCPY = 'Y', '독립성기준(관계기업)',
													IF(m_resn.MTLTY_INVSTMNT_LMTT = 'Y', '상호출자',
														IF(m_resn.FNCBIZ_ISCS = 'Y', '금융업 및 보험업',
															IF(m_resn.SMLPZ = 'Y', '중소기업',
																IF(m_resn.POSTPNE_ENTRPRS1 = 'Y', '유예기업1',
																	IF(m_resn.POSTPNE_ENTRPRS2 = 'Y', '유예기업2',
																		IF(m_resn.POSTPNE_ENTRPRS3 = 'Y', '유예기업3',
																			IF(m_resn.EXCL_CPR = 'Y', '제외법인',
																				IF(m_resn.FRNTN_SM_LTRS = 'Y', '외국계30%',
																					IF(m_resn.ELAPSE_MANAGT = 'Y', '제외기타', '-')))))))))))))))))	M_RESN_NM
	FROM			TB_ENTPRS_INFO	info
	LEFT JOIN		TB_HPE_JDGMNT_RESN	resn
		ON			info.STDYY = resn.STDYY
		AND			info.HPE_CD = resn.HPE_CD
		AND			resn.JDGMNT_MBY = 'S'
	LEFT JOIN		TB_HPE_JDGMNT_RESN	m_resn
		ON			info.STDYY = m_resn.STDYY
		AND			info.HPE_CD = m_resn.HPE_CD
		AND			m_resn.JDGMNT_MBY = 'M'	
	WHERE		info.STDYY = #{stdyy}
		<if test="searchKeyword != null and searchKeyword != '' ">
			<if test="searchCondition == 'entrprsNm' ">
		AND		info.ENTRPRS_NM LIKE CONCAT('%', #{searchKeyword},'%')
			</if>
			<if test="searchCondition == 'jurirno' ">
		AND		info.JURIRNO	 LIKE CONCAT('%', #{searchKeyword},'%')
			</if>
			<if test="searchCondition == 'bizrno' ">
		AND		info.BIZRNO	 LIKE CONCAT('%', #{searchKeyword},'%')
			</if>
		</if>
		<if test='searchGubun == "A" '>
		AND		( info.SYS_HPE_AT = 'Y' OR info.DCSN_HPE_AT = 'Y' )
		</if>
		<if test='searchGubun == "S" '>
		AND		info.SYS_HPE_AT = 'Y'
		</if>
		<if test='searchGubun == "M" '>
		AND		info.DCSN_HPE_AT = 'Y'
		</if>
	LIMIT			#{limitFrom}, #{limitTo}
	</select>

	<!-- 기업 판정사유 조회 -->
	<select id="selectDcsnJdgmntResnByHpe" resultType="egovMap">
	SELECT		/* ProgramID=biz.tech.mapif.js.PGJS0030Mapper.selectDcsnJdgmntResnByHpe */
					  info.ENTRPRS_NM
					, info.DCSN_HPE_AT
					, info.BASIS_DC
					, info.FILE_NM
					, info.FILE_SN
					, IF(resn.SCALE_STDR = 'Y', 'ST101', 
						IF(resn.UPLMT_1000 = 'Y', 'ST201', 
							IF(resn.UPLMT_ASSETS = 'Y', 'ST202', 
								IF(resn.UPLMT_CAPL = 'Y', 'ST203', 
									IF(resn.UPLMT_SELNG_3Y = 'Y', 'ST204',
										IF(resn.INDPNDNCY_DIRECT_30 = 'Y', 'ST301',
											IF(resn.INDPNDNCY_INDRT_30 = 'Y', 'ST302',
												IF(resn.INDPNDNCY_RCPY = 'Y', 'ST401',
													IF(resn.MTLTY_INVSTMNT_LMTT = 'Y', 'ST502',
														IF(resn.FNCBIZ_ISCS = 'Y', 'ST504',
															IF(resn.SMLPZ = 'Y', 'ST505',
																IF(resn.POSTPNE_ENTRPRS1 = 'Y', 'ST506',
																	IF(resn.POSTPNE_ENTRPRS2 = 'Y', 'ST507',
																		IF(resn.POSTPNE_ENTRPRS3 = 'Y', 'ST508',
																			IF(resn.EXCL_CPR = 'Y', 'ST509',
																				IF(resn.FRNTN_SM_LTRS = 'Y', 'ST503',
																					IF(resn.ELAPSE_MANAGT = 'Y', 'ST501', '')))))))))))))))))	DCSN_RESN_CD
	FROM		TB_ENTPRS_INFO	info
	LEFT JOIN	TB_HPE_JDGMNT_RESN	resn
		ON		info.STDYY = resn.STDYY
		AND		info.HPE_CD = resn.HPE_CD
		AND		resn.JDGMNT_MBY = 'M'
	WHERE		info.STDYY = #{stdyy}
		AND		info.HPE_CD = #{hpeCd}
	</select>
	
	<!-- 판정사유 첨부파일 삭제 -->
	<update id="updateSetNullAttachFileInfo">
	UPDATE		/* ProgramID=biz.tech.mapif.js.PGJS0030Mapper.updateSetNullAttachFileInfo */
					TB_ENTPRS_INFO
	SET			  FILE_NM = NULL
					, FILE_SN = NULL
	WHERE		STDYY = #{stdyy}
		AND		HPE_CD = #{hpeCd}
	</update>
	
	
	<!-- 시스템판정 -->
	<select id="callSystemJdgmnt" statementType="CALLABLE" resultType="int">
	/* ProgramID=biz.tech.mapif.js.PGJS0030Mapper.callSystemJdgmnt */	
	{
		<if test="gubun eq 'HPEC' ">CALL sp_JUDGE_HPEC(#{stdyy}, #{avgYear})</if>
		<if test="gubun eq 'GZLC' ">CALL sp_JUDGE_GZLC(#{stdyy}, #{avgYear})</if>
		<if test="gubun eq 'LTRS' ">CALL sp_JUDGE_LTRS(#{stdyy}, ${stdym})</if>
		<if test="gubun eq 'HPE' ">CALL sp_JUDGE_HPE_SYS(#{stdyy}, #{contAt})</if>
	}
	</select>
	
	<!-- 기업 확정판정 -->
	<select id="callDcsnJdgmnt" statementType="CALLABLE" resultType="int">
	/* ProgramID=biz.tech.mapif.js.PGJS0030Mapper.callDcsnJdgmnt */
	{
    		CALL sp_JUDGE_HPE_DCSN(#{stdyy}, #{mode})
	}
	</select>

	<!-- 개별 확정판정 처리 -->
	<update id="updateHpeDcsnJdgmnt">
	UPDATE		/* ProgramID=biz.tech.mapif.js.PGJS0030Mapper.updateHpeDcsnJdgmnt */
					TB_ENTPRS_INFO
	SET			  DCSN_HPE_AT = #{dcsnHpeAt}
					, BASIS_DC = #{basisDc}
		<if test="fileNm != null and fileNm != '' ">, FILE_NM = #{fileNm}</if>
		<if test="fileSn != null and fileSn != '' ">, FILE_SN = #{fileSn}</if>
	WHERE		STDYY = #{stdyy}
		AND		HPE_CD = #{hpeCd}
	</update>
	
	<!-- 개별 확정판정 사유등록 -->
	<insert id="insertHpeDcsnJdgmntResn">
	INSERT		/* ProgramID=biz.tech.mapif.js.PGJS0030Mapper.insertHpeDcsnJdgmntResn */
	INTO			TB_HPE_JDGMNT_RESN (
					  STDYY
					, HPE_CD
					, JDGMNT_MBY
					, SCALE_STDR
					, UPLMT_1000
					, UPLMT_ASSETS
					, UPLMT_CAPL
					, UPLMT_SELNG_3Y
					, INDPNDNCY_DIRECT_30
					, INDPNDNCY_INDRT_30
					, INDPNDNCY_RCPY
					, ELAPSE_MANAGT
					, MTLTY_INVSTMNT_LMTT
					, FRNTN_SM_LTRS
					, FNCBIZ_ISCS
					, SMLPZ
					, POSTPNE_ENTRPRS1
					, POSTPNE_ENTRPRS2
					, POSTPNE_ENTRPRS3
					, EXCL_CPR
					, CREAT_DE )
	VALUES		(
					  #{stdyy}
					, #{hpeCd}
					, 'M'
		<!-- 적합판정사유 -->
		<if test="resnCd == 'ST101' ">, 'Y'</if>
		<if test="resnCd != 'ST101' ">, 'N'</if>
		<if test="resnCd == 'ST201' ">, 'Y'</if>
		<if test="resnCd != 'ST201' ">, 'N'</if>
		<if test="resnCd == 'ST202' ">, 'Y'</if>
		<if test="resnCd != 'ST202' ">, 'N'</if>
		<if test="resnCd == 'ST203' ">, 'Y'</if>
		<if test="resnCd != 'ST203' ">, 'N'</if>
		<if test="resnCd == 'ST204' ">, 'Y'</if>
		<if test="resnCd != 'ST204' ">, 'N'</if>
		<if test="resnCd == 'ST301' ">, 'Y'</if>
		<if test="resnCd != 'ST301' ">, 'N'</if>
		<if test="resnCd == 'ST302' ">, 'Y'</if>
		<if test="resnCd != 'ST302' ">, 'N'</if>
		<if test="resnCd == 'ST401' ">, 'Y'</if>
		<if test="resnCd != 'ST401' ">, 'N'</if>
		<!-- 부적합판정사유 -->
		<if test="resnCd == 'ST501' ">, 'Y'</if>
		<if test="resnCd != 'ST501' ">, 'N'</if>
		<if test="resnCd == 'ST502' ">, 'Y'</if>
		<if test="resnCd != 'ST502' ">, 'N'</if>
		<if test="resnCd == 'ST503' ">, 'Y'</if>
		<if test="resnCd != 'ST503' ">, 'N'</if>
		<if test="resnCd == 'ST504' ">, 'Y'</if>
		<if test="resnCd != 'ST504' ">, 'N'</if>
		<if test="resnCd == 'ST505' ">, 'Y'</if>
		<if test="resnCd != 'ST505' ">, 'N'</if>
		<if test="resnCd == 'ST506' ">, 'Y'</if>
		<if test="resnCd != 'ST506' ">, 'N'</if>
		<if test="resnCd == 'ST507' ">, 'Y'</if>
		<if test="resnCd != 'ST507' ">, 'N'</if>
		<if test="resnCd == 'ST508' ">, 'Y'</if>
		<if test="resnCd != 'ST508' ">, 'N'</if>
		<if test="resnCd == 'ST509' ">, 'Y'</if>
		<if test="resnCd != 'ST509' ">, 'N'</if>
					, sysdate()	)
	ON DUPLICATE KEY UPDATE
		<!-- 적합판정사유 -->
		<if test="resnCd == 'ST101' ">  SCALE_STDR = 'Y'</if>
		<if test="resnCd != 'ST101' ">  SCALE_STDR = 'N'</if>
		<if test="resnCd == 'ST201' ">, UPLMT_1000 = 'Y'</if>
		<if test="resnCd != 'ST201' ">, UPLMT_1000 = 'N'</if>
		<if test="resnCd == 'ST202' ">, UPLMT_ASSETS = 'Y'</if>
		<if test="resnCd != 'ST202' ">, UPLMT_ASSETS = 'N'</if>
		<if test="resnCd == 'ST203' ">, UPLMT_CAPL = 'Y'</if>
		<if test="resnCd != 'ST203' ">, UPLMT_CAPL = 'N'</if>
		<if test="resnCd == 'ST204' ">, UPLMT_SELNG_3Y = 'Y'</if>
		<if test="resnCd != 'ST204' ">, UPLMT_SELNG_3Y = 'N'</if>
		<if test="resnCd == 'ST301' ">, INDPNDNCY_DIRECT_30 = 'Y'</if>
		<if test="resnCd != 'ST301' ">, INDPNDNCY_DIRECT_30 = 'N'</if>
		<if test="resnCd == 'ST302' ">, INDPNDNCY_INDRT_30 = 'Y'</if>
		<if test="resnCd != 'ST302' ">, INDPNDNCY_INDRT_30 = 'N'</if>
		<if test="resnCd == 'ST401' ">, INDPNDNCY_RCPY = 'Y'</if>
		<if test="resnCd != 'ST401' ">, INDPNDNCY_RCPY = 'N'</if>
		<!-- 부적합판정사유 -->
		<if test="resnCd == 'ST501' ">, ELAPSE_MANAGT = 'Y'</if>
		<if test="resnCd != 'ST501' ">, ELAPSE_MANAGT = 'N'</if>
		<if test="resnCd == 'ST502' ">, MTLTY_INVSTMNT_LMTT = 'Y'</if>
		<if test="resnCd != 'ST502' ">, MTLTY_INVSTMNT_LMTT = 'N'</if>
		<if test="resnCd == 'ST503' ">, FRNTN_SM_LTRS = 'Y'</if>
		<if test="resnCd != 'ST503' ">, FRNTN_SM_LTRS = 'N'</if>
		<if test="resnCd == 'ST504' ">, FNCBIZ_ISCS = 'Y'</if>
		<if test="resnCd != 'ST504' ">, FNCBIZ_ISCS = 'N'</if>
		<if test="resnCd == 'ST505' ">, SMLPZ = 'Y'</if>
		<if test="resnCd != 'ST505' ">, SMLPZ = 'N'</if>
		<if test="resnCd == 'ST506' ">, POSTPNE_ENTRPRS1 = 'Y'</if>
		<if test="resnCd != 'ST506' ">, POSTPNE_ENTRPRS1 = 'N'</if>
		<if test="resnCd == 'ST507' ">, POSTPNE_ENTRPRS2 = 'Y'</if>
		<if test="resnCd != 'ST507' ">, POSTPNE_ENTRPRS2 = 'N'</if>
		<if test="resnCd == 'ST508' ">, POSTPNE_ENTRPRS3 = 'Y'</if>
		<if test="resnCd != 'ST508' ">, POSTPNE_ENTRPRS3 = 'N'</if>
		<if test="resnCd == 'ST509' ">, EXCL_CPR = 'Y'</if>
		<if test="resnCd != 'ST509' ">, EXCL_CPR = 'N'</if>
	</insert>	
	
	<!-- 기업 시스템판정 데이터 목록 조회(엑셀다운) -->
	<select id="selectHpeSystemJdgmntDataList" resultType="map">
	SELECT		/* ProgramID=biz.tech.mapif.js.PGJS0030Mapper.selectHpeSystemJdgmntDataList */
					  tb2.STDYY
					, tb2.HPE_CD
					, tb2.JURIRNO
					, tb2.BIZRNO
					, tb2.ENTRPRS_NM
					, tb2.ENTRPRS_OTHBC_STLE_NM
					, tb2.FOND_DE
					, tb2.SPCSS_DE
					, FN_CD2CDNM(59, tb2.SPCSS_AT) as SPCSS_AT
					, tb2.SYS_HPE_AT
					, tb2.ISGN_AT
					, FN_CD2CDNM(16, tb2.JDGMNT_CODE) as ISGN_NM
					, tb2.DCSN_HPE_AT
					, tb2.ANALS_USE_AT
					, tb2.SCALE_STDR
					, tb2.UPLMT_1000
					, tb2.UPLMT_ASSETS
					, tb2.UPLMT_CAPL
					, tb2.UPLMT_SELNG_3Y
					, tb2.INDPNDNCY_DIRECT_30
					, tb2.INDPNDNCY_INDRT_30
					, tb2.INDPNDNCY_RCPY
					, tb2.MTLTY_INVSTMNT_LMTT
					, tb2.FNCBIZ_ISCS
					, tb2.SMLPZ
					, tb2.POSTPNE_ENTRPRS1
					, tb2.POSTPNE_ENTRPRS2
					, tb2.POSTPNE_ENTRPRS3
					, tb2.EXCL_CPR
					, tb2.FRNTN_SM_LTRS
					, tb2.ELAPSE_MANAGT
					, tb2.CTGR_Y0
					, tb2.CTGR_Y1
					, tb2.CTGR_Y2
					, tb2.CTGR_Y3
					, tb2.LABRR_Y0
					, tb2.LABRR_Y1
					, tb2.LABRR_Y2
					, tb2.LABRR_Y3
					, tb2.ASSET_Y0
					, tb2.ASSET_Y1
					, tb2.ASSET_Y2
					, tb2.ASSET_Y3
					, tb2.GLD_Y0
					, tb2.GLD_Y1
					, tb2.GLD_Y2
					, tb2.GLD_Y3
					, tb2.CAPL_Y0
					, tb2.CAPL_Y1
					, tb2.CAPL_Y2
					, tb2.CAPL_Y3
					, tb2.SELNG_Y0
					, tb2.SELNG_Y1
					, tb2.SELNG_Y2
					, tb2.SELNG_Y3
					, tb2.B2B_ENTRPRS_AT
					, tb2.B2C_ENTRPRS_AT
					, tb2.B2G_ENTRPRS_AT
					, tb2.FNSY_AT
	FROM		(
						SELECT		
										  tb.*
										, ctgr1.CTGR_Y1, ctgr2.CTGR_Y2, ctgr3.CTGR_Y3
										, fnnr1.ORDTM_LABRR_CO AS LABRR_Y1, fnnr1.ASSETS_SM AS ASSET_Y1, fnnr1.CAPL_RESIDU_GLD AS GLD_Y1
										, fnnr1.CAPL_SM AS CAPL_Y1, fnnr1.SELNG_AM AS SELNG_Y1
										, fnnr2.ORDTM_LABRR_CO AS LABRR_Y2, fnnr2.ASSETS_SM AS ASSET_Y2, fnnr2.CAPL_RESIDU_GLD AS GLD_Y2
										, fnnr2.CAPL_SM AS CAPL_Y2, fnnr2.SELNG_AM AS SELNG_Y2
										, fnnr3.ORDTM_LABRR_CO AS LABRR_Y3, fnnr3.ASSETS_SM AS ASSET_Y3, fnnr3.CAPL_RESIDU_GLD AS GLD_Y3
										, fnnr3.CAPL_SM AS CAPL_Y3, fnnr3.SELNG_AM AS SELNG_Y3
										, IF(JDGMNT_CODE IS NULL, 'N', 'Y') AS ISGN_AT
						FROM		(
												SELECT info.STDYY,
											     info.HPE_CD,
											     info.JURIRNO,
											     info.BIZRNO,
											     info.ENTRPRS_NM,
											     FN_CD2CDNM(58, ENTRPRS_OTHBC_STLE) ENTRPRS_OTHBC_STLE_NM,
											     info.FOND_DE,
											     info.SPCSS_DE,
											     info.SPCSS_AT,
											     info.SYS_HPE_AT,
											     info.DCSN_HPE_AT,
											     info.ANALS_USE_AT,
											     info.B2B_ENTRPRS_AT,
											     info.B2C_ENTRPRS_AT,
											     info.B2G_ENTRPRS_AT,
											     info.FNSY_AT,
											     resn.SCALE_STDR,
											     resn.UPLMT_1000,
											     resn.UPLMT_ASSETS,
											     resn.UPLMT_CAPL,
											     resn.UPLMT_SELNG_3Y,
											     resn.INDPNDNCY_DIRECT_30,
											     resn.INDPNDNCY_INDRT_30,
											     resn.INDPNDNCY_RCPY,
											     resn.MTLTY_INVSTMNT_LMTT,
											     resn.FNCBIZ_ISCS,
											     resn.SMLPZ,
											     resn.POSTPNE_ENTRPRS1,
											     resn.POSTPNE_ENTRPRS2,
											     resn.POSTPNE_ENTRPRS3,
											     resn.EXCL_CPR,
											     resn.FRNTN_SM_LTRS,
											     resn.ELAPSE_MANAGT,
											     resn.JDGMNT_CODE,
											     CONCAT_WS('', LCLAS_CD, MLSFC_CD) AS CTGR_Y0,
											     fnnr.ORDTM_LABRR_CO AS LABRR_Y0,
											     fnnr.ASSETS_SM AS ASSET_Y0,
											     fnnr.CAPL_RESIDU_GLD AS GLD_Y0,
											     fnnr.CAPL_SM AS CAPL_Y0,
											     fnnr.SELNG_AM AS SELNG_Y0
											from TB_ENTPRS_INFO info left join
											     TB_HPE_JDGMNT_RESN resn
											on info.STDYY = resn.STDYY
											AND info.HPE_CD = resn.HPE_CD
											left join TB_FNNR_DATA fnnr
											on info.STDYY = fnnr.STDYY
											AND info.HPE_CD = fnnr.HPE_CD
											where info.STDYY = #{stdyy}
											AND info.SYS_HPE_AT = 'Y'
											AND resn.JDGMNT_MBY = 'S'
									) tb
						LEFT JOIN
										(SELECT HPE_CD, CONCAT_WS('', LCLAS_CD, MLSFC_CD) AS CTGR_Y1 FROM TB_ENTPRS_INFO WHERE STDYY = #{year1} ) ctgr1
							ON		tb.HPE_CD = ctgr1.HPE_CD
						LEFT JOIN
										(SELECT HPE_CD, CONCAT_WS('', LCLAS_CD, MLSFC_CD) AS CTGR_Y2 FROM TB_ENTPRS_INFO WHERE STDYY = #{year2} ) ctgr2
							ON		tb.HPE_CD = ctgr2.HPE_CD
						LEFT JOIN
										(SELECT HPE_CD, CONCAT_WS('', LCLAS_CD, MLSFC_CD) AS CTGR_Y3 FROM TB_ENTPRS_INFO WHERE STDYY = #{year3} ) ctgr3
							ON		tb.HPE_CD = ctgr3.HPE_CD
						LEFT JOIN
										(SELECT HPE_CD, ORDTM_LABRR_CO, ASSETS_SM, CAPL_RESIDU_GLD, CAPL_SM, SELNG_AM FROM TB_FNNR_DATA WHERE STDYY = #{year1} ) fnnr1
							ON		tb.HPE_CD = fnnr1.HPE_CD
						LEFT JOIN
										(SELECT HPE_CD, ORDTM_LABRR_CO, ASSETS_SM, CAPL_RESIDU_GLD, CAPL_SM, SELNG_AM FROM TB_FNNR_DATA WHERE STDYY = #{year2} ) fnnr2
							ON		tb.HPE_CD = fnnr2.HPE_CD
						LEFT JOIN
										(SELECT HPE_CD, ORDTM_LABRR_CO, ASSETS_SM, CAPL_RESIDU_GLD, CAPL_SM, SELNG_AM FROM TB_FNNR_DATA WHERE STDYY = #{year3} ) fnnr3
							ON		tb.HPE_CD = fnnr3.HPE_CD
						) tb2
	</select>
	
	<!-- 기업 확정판정 데이터 삭제(엑셀업로드) -->
	<delete id="deleteHpeDcsnJdgmntData">
	DELETE		/* ProgramID=biz.tech.mapif.js.PGJS0030Mapper.deleteHpeDcsnJdgmntData */
	FROM		TMP_DSCN_HPE
	WHERE		STDYY = #{stdyy}
	</delete>
	
	<!-- 기업 확정판정 데이터 등록(엑셀업로드) -->
	<insert id="insertHpeDcsnJdgmntData">
	INSERT		/* ProgramID=biz.tech.mapif.js.PGJS0030Mapper.insertHpeDcsnJdgmntData */
	INTO			TMP_DSCN_HPE (
					  STDYY
					, HPE_CD
					, JURIRNO
					, BIZRNO
					, SYS_HPE_AT
					, ISGN_AT
					, DCSN_HPE_AT
					, ANALS_USE_AT
					, SCALE_STDR
					, UPLMT_1000
					, UPLMT_ASSETS
					, UPLMT_CAPL
					, UPLMT_SELNG_3Y
					, INDPNDNCY_DIRECT_30
					, INDPNDNCY_INDRT_30
					, INDPNDNCY_RCPY
					, MTLTY_INVSTMNT_LMTT
					, FNCBIZ_ISCS
					, SMLPZ
					, POSTPNE_ENTRPRS1
					, POSTPNE_ENTRPRS2
					, POSTPNE_ENTRPRS3
					, EXCL_CPR
					, FRNTN_SM_LTRS
					, ELAPSE_MANAGT
					, B2B_ENTRPRS_AT
					, B2C_ENTRPRS_AT
					, B2G_ENTRPRS_AT
					, FNSY_AT
					, XPORT_AM_DOLLAR0
					, XPORT_AM_DOLLAR1
					, XPORT_AM_DOLLAR2
					, XPORT_AM_DOLLAR3
					, XPORT_AM_DOLLAR4
					, XPORT_AM_DOLLAR5
					, XPORT_AM_DOLLAR6
					, XPORT_AM_DOLLAR7
					, XPORT_AM_DOLLAR8
					, XPORT_AM_DOLLAR9
					, DMSTC_PATENT_REGIST_VLM0
					, DMSTC_PATENT_REGIST_VLM1
					, DMSTC_PATENT_REGIST_VLM2
					, DMSTC_PATENT_REGIST_VLM3
					, DMSTC_PATENT_REGIST_VLM4
					, DMSTC_PATENT_REGIST_VLM5
					, DMSTC_PATENT_REGIST_VLM6
					, DMSTC_PATENT_REGIST_VLM7
					, DMSTC_PATENT_REGIST_VLM8
					, DMSTC_PATENT_REGIST_VLM9
					, DMSTC_APLC_PATNTRT0
					, DMSTC_APLC_PATNTRT1
					, DMSTC_APLC_PATNTRT2
					, DMSTC_APLC_PATNTRT3
					, DMSTC_APLC_PATNTRT4
					, DMSTC_APLC_PATNTRT5
					, DMSTC_APLC_PATNTRT6
					, DMSTC_APLC_PATNTRT7
					, DMSTC_APLC_PATNTRT8
					, DMSTC_APLC_PATNTRT9
					, UTLMDLRT0
					, UTLMDLRT1
					, UTLMDLRT2
					, UTLMDLRT3
					, UTLMDLRT4
					, UTLMDLRT5
					, UTLMDLRT6
					, UTLMDLRT7
					, UTLMDLRT8
					, UTLMDLRT9
					, DSNREG0
					, DSNREG1
					, DSNREG2
					, DSNREG3
					, DSNREG4
					, DSNREG5
					, DSNREG6
					, DSNREG7
					, DSNREG8
					, DSNREG9
					, TRDMKRT0
					, TRDMKRT1
					, TRDMKRT2
					, TRDMKRT3
					, TRDMKRT4
					, TRDMKRT5
					, TRDMKRT6
					, TRDMKRT7
					, TRDMKRT8
					, TRDMKRT9 )
	VALUES (
					  #{STDYY}
					, #{HPE_CD}
					, #{JURIRNO}
					, #{BIZRNO}
					, #{SYS_HPE_AT}
					, #{ISGN_AT}
					, #{DCSN_HPE_AT}
					, #{ANALS_USE_AT}
					, #{SCALE_STDR}
					, #{UPLMT_1000}
					, #{UPLMT_ASSETS}
					, #{UPLMT_CAPL}
					, #{UPLMT_SELNG_3Y}
					, #{INDPNDNCY_DIRECT_30}
					, #{INDPNDNCY_INDRT_30}
					, #{INDPNDNCY_RCPY}
					, #{MTLTY_INVSTMNT_LMTT}
					, #{FNCBIZ_ISCS}
					, #{SMLPZ}
					, #{POSTPNE_ENTRPRS1}
					, #{POSTPNE_ENTRPRS2}
					, #{POSTPNE_ENTRPRS3}
					, #{EXCL_CPR}
					, #{FRNTN_SM_LTRS}
					, #{ELAPSE_MANAGT}
					, #{B2B_ENTRPRS_AT}
					, #{B2C_ENTRPRS_AT}
					, #{B2G_ENTRPRS_AT}
					, #{FNSY_AT}
					, #{XPORT_AM_DOLLAR_Y0}
					, #{XPORT_AM_DOLLAR_Y1}
					, #{XPORT_AM_DOLLAR_Y2}
					, #{XPORT_AM_DOLLAR_Y3}
					, #{XPORT_AM_DOLLAR_Y4}
					, #{XPORT_AM_DOLLAR_Y5}
					, #{XPORT_AM_DOLLAR_Y6}
					, #{XPORT_AM_DOLLAR_Y7}
					, #{XPORT_AM_DOLLAR_Y8}
					, #{XPORT_AM_DOLLAR_Y9}
					, #{DMSTC_PATENT_REGIST_VLM_Y0}
					, #{DMSTC_PATENT_REGIST_VLM_Y1}
					, #{DMSTC_PATENT_REGIST_VLM_Y2}
					, #{DMSTC_PATENT_REGIST_VLM_Y3}
					, #{DMSTC_PATENT_REGIST_VLM_Y4}
					, #{DMSTC_PATENT_REGIST_VLM_Y5}
					, #{DMSTC_PATENT_REGIST_VLM_Y6}
					, #{DMSTC_PATENT_REGIST_VLM_Y7}
					, #{DMSTC_PATENT_REGIST_VLM_Y8}
					, #{DMSTC_PATENT_REGIST_VLM_Y9}
					, #{DMSTC_APLC_PATNTRT_Y0}
					, #{DMSTC_APLC_PATNTRT_Y1}
					, #{DMSTC_APLC_PATNTRT_Y2}
					, #{DMSTC_APLC_PATNTRT_Y3}
					, #{DMSTC_APLC_PATNTRT_Y4}
					, #{DMSTC_APLC_PATNTRT_Y5}
					, #{DMSTC_APLC_PATNTRT_Y6}
					, #{DMSTC_APLC_PATNTRT_Y7}
					, #{DMSTC_APLC_PATNTRT_Y8}
					, #{DMSTC_APLC_PATNTRT_Y9}
					, #{UTLMDLRT_Y0}
					, #{UTLMDLRT_Y1}
					, #{UTLMDLRT_Y2}
					, #{UTLMDLRT_Y3}
					, #{UTLMDLRT_Y4}
					, #{UTLMDLRT_Y5}
					, #{UTLMDLRT_Y6}
					, #{UTLMDLRT_Y7}
					, #{UTLMDLRT_Y8}
					, #{UTLMDLRT_Y9}
					, #{DSNREG_Y0}
					, #{DSNREG_Y1}
					, #{DSNREG_Y2}
					, #{DSNREG_Y3}
					, #{DSNREG_Y4}
					, #{DSNREG_Y5}
					, #{DSNREG_Y6}
					, #{DSNREG_Y7}
					, #{DSNREG_Y8}
					, #{DSNREG_Y9}
					, #{TRDMKRT_Y0}
					, #{TRDMKRT_Y1}
					, #{TRDMKRT_Y2}
					, #{TRDMKRT_Y3}
					, #{TRDMKRT_Y4}
					, #{TRDMKRT_Y5}
					, #{TRDMKRT_Y6}
					, #{TRDMKRT_Y7}
					, #{TRDMKRT_Y8}
					, #{TRDMKRT_Y9} )
	</insert>
	
	<!-- 기업 확정판정 판정자료 백업 --> 	 
	<select id="callDataBackup" statementType="CALLABLE" resultType="int">
	/* ProgramID=biz.tech.mapif.js.PGJS0030Mapper.callDataBackup */
	{
    		CALL sp_BACKUP_ENTRDATA_TABLES(#{base_year})
	}
	</select>
	
</mapper>